{"version":3,"sources":["Header/index.js","Container/index.js","Form/Fieldset/index.js","Currencies/currencies.js","Form/Result/index.js","Form/index.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Container","children","Fieldset","legendContent","fieldsetBody","currencies","short","label","rate","Result","result","undefined","givenAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","amount","setAmount","setCurrency","onSubmit","event","preventDefault","value","onChange","target","map","name","type","step","required","Clock","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","weekday","hour","minute","second","day","month","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e5c6c56.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Header = (props) => (\n    <header className=\"header\">\n        {props.title}\n    </header>\n);\n\nexport default Header;","import \"./style.css\";\n\nconst Container = (props) => (\n    <main className=\"container\">\n        {props.children}\n    </main>\n);\n\nexport default Container;","const Fieldset = ({ legendContent, fieldsetBody }) => {\n    return (\n        <fieldset className=\"form__fieldset\">\n            <legend className=\"form__legend\">{legendContent}</legend>\n            <p>\n                {fieldsetBody}\n            </p>\n        </fieldset>\n    );\n};\n\nexport default Fieldset;","const currencies = [\n   {\n      short: \"EUR\",\n      label: \"Euro\",\n      rate: 4.50,\n   },\n   {\n      short: \"USD\",\n      label: \"Dolar Amerykański\",\n      rate: 3.78,\n   },\n   {\n      short: \"GBP\",\n      label: \"Funt Brytyjski\",\n      rate: 5.25,\n   },\n];\n\nexport default currencies;","const Result = ({ result }) => {\n    return (\n        <p className=\"form__converter\">\n            {result !== undefined && (\n                <>\n                    {result.givenAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\n                    <strong>\n                        {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n                    </strong>\n                </>\n            )}\n        </p>\n    )\n};\n\n\n\nexport default Result;","import React, { useState } from 'react';\nimport \"./style.css\";\nimport Fieldset from \"./Fieldset\";\nimport currencies from \"../Currencies/currencies\";\nimport Result from \"./Result\";\n\n\nconst Form = ({ calculateResult, result }) => {\n\n    const [amount, setAmount] = useState();\n    const [currency, setCurrency] = useState(currencies[0].short);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(amount, currency);\n    }\n\n    return (\n        <form onSubmit={onFormSubmit} className=\"form\">\n            <Fieldset\n                legendContent=\"Na jaką walutę, którą chcesz zamienić PLN?\"\n                fieldsetBody={\n                    <label className=\"form__label\">\n                        <select\n                            className=\"form__amount\"\n                            value={currency}\n                            onChange={(event) => setCurrency(event.target.value)}\n                        >\n                            {currencies.map((currency => (\n                                <option\n                                    key={currency.short}\n                                    value={currency.short}\n                                >\n                                    {currency.label}\n                                </option>\n                            )))}\n                        </select>\n                    </label>\n                }\n            />\n\n            <Fieldset\n                legendContent=\"Kwota którą chcesz przeliczyć ?\"\n                fieldsetBody={\n                    <>\n                        Podaj kwotę w PLN:\n                        <input\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            className=\" form__amount\"\n                            name=\"amount\"\n                            type=\"number\"\n                            step=\"0.01\"\n                            required\n                        />\n                    </>\n                }\n            />\n\n            <p>\n                <button className=\"form__button\">Przelicz</button>\n            </p>\n\n            <Result result={result} />\n        </form>\n    );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport \"./style.css\";\n\nconst Clock = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDate(new Date());\n        }, 1000)\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [])\n\n    return (\n        <div className=\"clock\">\n            Dzisiaj jest:\n            {\" \"}\n            {date.toLocaleString(undefined, {\n                weekday: \"long\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                day: \"numeric\",\n                month: \"long\"\n\n            })}\n        </div>\n    )\n}\n\n\nexport default Clock;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport currencies from \"./Currencies/currencies\";\nimport Clock from \"./Clock\";\n\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (amount, currency) => {\n    const rate = currencies.find(({ short }) => short === currency).rate;\n    setResult({\n      givenAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  }\n  return (\n    <>\n      <Header title=\"KALKULATOR WALUT\" />\n\n      <Container>\n        <Clock />\n        <Form calculateResult={calculateResult} result={result} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}