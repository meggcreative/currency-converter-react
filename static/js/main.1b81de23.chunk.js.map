{"version":3,"sources":["Header/styled.js","Header/index.js","Container/index.js","Form/styled.js","Form/Fieldset/index.js","Currencies/currencies.js","Form/Result/index.js","Form/index.js","Clock/styled.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","Header","props","title","Container","children","StyledFieldset","fieldset","Select","select","Button","button","Legend","legend","StyledContener","p","Fieldset","legendContent","fieldsetBody","currencies","short","label","rate","Result","result","undefined","givenAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","amount","setAmount","setCurrency","onSubmit","event","preventDefault","value","onChange","target","map","as","name","type","step","required","StyledContainer","div","Clock","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","weekday","hour","minute","second","day","month","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b81de23.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n    padding: 20px;\n    margin: 0 auto;\n    max-width: 600px;\n    text-align: center;\n    font-size: 40px;\n    color: rgb(94, 77, 77);\n    font-weight: bold;\n`","import {StyledHeader} from \"./styled.js\";\n\nconst Header = (props) => (\n    <StyledHeader>\n        {props.title}\n    </StyledHeader>\n);\n\nexport default Header;","\nconst Container = (props) => (\n    <main>\n        {props.children}\n    </main>\n);\n\nexport default Container;","import styled from \"styled-components\";\n\nexport const StyledFieldset = styled.fieldset`\n    padding: 20px;\n    margin: 20px auto;\n    border: 5px solid rgb(116, 177, 134);\n    border-radius: 10%;\n    background-color: #20445B;\n    position: relative;\n    box-shadow: 5px -15px 70px 42px #65858E;\n    color: rgb(188, 209, 212);\n    font-size: 20px;\n    max-width: 500px;\n`\nexport const Select = styled.select`\n    border: 1px solid #ccc;\n    padding: 5px;\n    max-width: 250px;\n    width: 100%;\n    border-radius: 3%;\n    font-size: 20px;\n    background-color: rgb(221, 240, 236);\n`\nexport const Button = styled.button`\n    margin: 15px auto;\n    padding: 10px;\n    background-color: rgb(116, 177, 134);\n    width: 100%;\n    border: 6px solid #20445B;\n    border-radius: 5%;\n    font-size: 20px;\n    color: rgb(48, 46, 46);\n    font-weight: bold;\n\n    &:active {\n        background-color: rgb(63, 129, 82);\n    }\n`\nexport const Legend = styled.legend`\n    border: 3px solid rgb(116, 177, 134);\n    padding: 10px;\n    font-size: 15px;\n    background-color: rgb(196, 203, 207);\n    color: rgb(44, 43, 43);\n    font-weight: bold;\n`\n\nexport const StyledContener = styled.p`\n    padding: 10px;\n    margin: 10px auto;\n    border: 5px solid rgb(116, 177, 134);\n    border-radius: 10%;\n    background-color: #20445B;\n    position: relative;\n    color: rgb(188, 209, 212);\n    font-size: 25px;\n    max-width: 400px;\n`","import { StyledFieldset, Legend } from \"../styled.js\";\n\nconst Fieldset = ({ legendContent, fieldsetBody }) => {\n    return (\n        <StyledFieldset>\n            <Legend>{legendContent}</Legend>\n            <p>\n                {fieldsetBody}\n            </p>\n        </StyledFieldset>\n    );\n};\n\nexport default Fieldset;","const currencies = [\n   {\n      short: \"EUR\",\n      label: \"Euro\",\n      rate: 4.50,\n   },\n   {\n      short: \"USD\",\n      label: \"Dolar Amerykański\",\n      rate: 3.78,\n   },\n   {\n      short: \"GBP\",\n      label: \"Funt Brytyjski\",\n      rate: 5.25,\n   },\n];\n\nexport default currencies;","import {StyledContener} from \"../styled.js\";\n\nconst Result = ({ result }) => {\n    return (\n        <StyledContener>\n            {result !== undefined && (\n                <>\n                    {result.givenAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\n                    <strong>\n                        {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n                    </strong>\n                </>\n            )}\n        </StyledContener>\n    )\n};\n\n\n\nexport default Result;","import React, { useState } from 'react';\nimport Fieldset from \"./Fieldset\";\nimport currencies from \"../Currencies/currencies\";\nimport Result from \"./Result\";\nimport { Select, Button } from \"./styled.js\"\n\n\nconst Form = ({ calculateResult, result }) => {\n\n    const [amount, setAmount] = useState();\n    const [currency, setCurrency] = useState(currencies[0].short);\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(amount, currency);\n    }\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <Fieldset\n                legendContent=\"Na jaką walutę, którą chcesz zamienić PLN?\"\n                fieldsetBody={\n                    <label>\n                        <Select\n                            value={currency}\n                            onChange={(event) => setCurrency(event.target.value)}\n                        >\n                            {currencies.map((currency => (\n                                <option\n                                    key={currency.short}\n                                    value={currency.short}\n                                >\n                                    {currency.label}\n                                </option>\n                            )))}\n                        </Select>\n                    </label>\n                }\n            />\n\n            <Fieldset\n                legendContent=\"Kwota którą chcesz przeliczyć ?\"\n                fieldsetBody={\n                    <>\n                        Podaj kwotę w PLN:\n                        <Select as=\"input\"\n                            value={amount}\n                            onChange={({ target }) => setAmount(target.value)}\n                            name=\"amount\"\n                            type=\"number\"\n                            step=\"0.01\"\n                            required\n                        />\n                    </>\n                }\n            />\n\n            <p>\n                <Button>Przelicz</Button>\n            </p>\n\n            <Result result={result} />\n        </form>\n    );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    text-align: center;\n    font-family: monospace;\n    color: rgb(37, 36, 36);\n    padding: 20px;\n`","import { useEffect, useState } from 'react';\nimport {StyledContainer} from \"./styled.js\";\n\nconst Clock = () => {\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setDate(new Date());\n        }, 1000)\n\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [])\n\n    return (\n        <StyledContainer>\n            Dzisiaj jest:\n            {\" \"}\n            {date.toLocaleString(undefined, {\n                weekday: \"long\",\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                day: \"numeric\",\n                month: \"long\"\n\n            })}\n        </StyledContainer>\n    )\n}\n\n\nexport default Clock;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport currencies from \"./Currencies/currencies\";\nimport Clock from \"./Clock\";\n\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (amount, currency) => {\n    const rate = currencies.find(({ short }) => short === currency).rate;\n    setResult({\n      givenAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  }\n  return (\n    <>\n      <Header title=\"KALKULATOR WALUT\" />\n\n      <Container>\n        <Clock />\n        <Form calculateResult={calculateResult} result={result} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}